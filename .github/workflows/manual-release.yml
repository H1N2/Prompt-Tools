name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            container: ubuntu:22.04
          - os: windows-2022
          - os: macos-13
            platform: macos
            arch: x64
            targets: x86_64-apple-darwin
          - os: macos-14
            platform: macos
            arch: arm64
            targets: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        working-directory: ./prompt-tools
        run: npm ci

      - name: Install system deps for Linux (Ubuntu 22.04)
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: |
          apt-get update && apt-get install -y \
            libwebkit2gtk-4.1-dev libgtk-3-dev libayatana-appindicator3-dev \
            librsvg2-dev build-essential curl wget file patchelf libssl-dev \
            xdg-utils desktop-file-utils

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.targets || '' }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            prompt-tools/src-tauri/target
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build Tauri app
        working-directory: ./prompt-tools
        run: npm run tauri build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prompt-tools-${{ matrix.os }}-${{ matrix.arch || 'unknown' }}
          path: |
            prompt-tools/src-tauri/target/release/bundle/dmg/*.dmg
            prompt-tools/src-tauri/target/release/bundle/macos/*.dmg
            prompt-tools/src-tauri/target/release/bundle/macos/*.app.tar.gz
            prompt-tools/src-tauri/target/release/bundle/appimage/*.AppImage
            prompt-tools/src-tauri/target/release/bundle/deb/*.deb
            prompt-tools/src-tauri/target/release/bundle/rpm/*.rpm
            prompt-tools/src-tauri/target/release/bundle/nsis/*.exe
            prompt-tools/src-tauri/target/release/bundle/msi/*.msi
            prompt-tools/src-tauri/target/release/bundle/**/*.sig
            prompt-tools/src-tauri/target/release/bundle/**/*.sha256*
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      - name: Display structure of downloaded files
        run: ls -R artifacts
      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Prompt Tools ${{ github.event.inputs.version }}${{ github.event.inputs.prerelease == 'true' && ' (Pre-release)' || '' }}
          files: |
            artifacts/**/*.dmg
            artifacts/**/*.app.tar.gz
            artifacts/**/*.AppImage
            artifacts/**/*.deb
            artifacts/**/*.rpm
            artifacts/**/*setup*.exe
            artifacts/**/*.msi
            artifacts/**/*.sig
            artifacts/**/*.sha256*
          generate_release_notes: true
          draft: false
          prerelease: ${{ github.event.inputs.prerelease == 'true' }}